{
   "configSections": {
      "sectionGroup": {
         "name": "ajaxNet",
         "section": {
            "name": "ajaxSettings",
            "requirePermission": "false",
            "restartOnExternalChanges": "true"
         }
      },
      "section": [
         {
            "name": "hibernate-configuration"
         },
         {
            "name": "log4net"
         },
         {
            "name": "system.identityModel"
         },
         {
            "name": "system.identityModel.services"
         },
         {
            "name": "syscache"
         },
         {
            "name": "cacheManager"
         },
         {
            "name": "cacheManager.Redis"
         },
         {
            "name": "throttlePolicy"
         }
      ]
   },
   "cacheManager.Redis": {
      "connections": {
         "connection": {
            "id": "redis1",
            "database": "0",
            "connectionString": ":0, allowAdmin = False, ssl = false"
         }
      }
   },
   "cacheManager": {
      "managers": [
         {
            "name": "ServicesCache",
            "enableStatistics": "true",
            "enablePerformanceCounters": "true",
            "serializerType": "CacheManager.Serialization.Json.JsonCacheSerializer, CacheManager.Serialization.Json",
            "handle": {
               "name": "default",
               "ref": "dicGeneric"
            }
         },
         {
            "name": "AppCache",
            "enableStatistics": "true",
            "enablePerformanceCounters": "true",
            "serializerType": "CacheManager.Serialization.Json.JsonCacheSerializer, CacheManager.Serialization.Json",
            "handle": {
               "name": "default",
               "ref": "dicGeneric"
            }
         },
         {
            "name": "SessionStateStorage",
            "enableStatistics": "true",
            "enablePerformanceCounters": "true",
            "serializerType": "CacheManager.Serialization.Json.JsonCacheSerializer, CacheManager.Serialization.Json",
            "handle": {
               "name": "default",
               "ref": "dicSession"
            }
         }
      ],
      "cacheHandles": [
         {
            "name": "dicGeneric",
            "id": "dicGeneric",
            "defaultExpirationMode": "Absolute",
            "defaultTimeout": "15s"
         },
         {
            "name": "dicSession",
            "id": "dicSession",
            "defaultExpirationMode": "Absolute",
            "defaultTimeout": "20m"
         }
      ]
   },
   "throttlePolicy": {
      "limitPerSecond": "10000",
      "ipThrottling": "false",
      "clientThrottling": "false",
      "endpointThrottling": "true",
      "rules": [
         {
            "limitPerSecond": "1000",
            "policyType": "3",
            "entry": "api/Runner",
            "name": "api/Runner"
         },
         {
            "limitPerSecond": "1000",
            "policyType": "3",
            "entry": "api/Test",
            "name": "api/Test"
         },
         {
            "limitPerSecond": "1000",
            "policyType": "3",
            "entry": "api/CacheSessionService",
            "name": "api/CacheSessionService"
         },
         {
            "limitPerSecond": "1000",
            "policyType": "3",
            "entry": "api/ExposeToConsume",
            "name": "api/ExposeToConsume"
         }
      ],
      "whitelists": [
         {
            "policyType": "1",
            "entry": "127.0.0.1",
            "name": "1"
         },
         {
            "policyType": "1",
            "entry": "192.168.0.0/24",
            "name": "2"
         },
         {
            "policyType": "2",
            "entry": "api-admin-key",
            "name": "3"
         }
      ]
   },
   "system.identityModel.services": {
      "federationConfiguration": {
         "cookieHandler": {
            "mode": "Default",
            "name": "cfTests_4_gtheofilis_Fed",
            "requireSsl": "false"
         }
      }
   },
   "system.identityModel": {
      "identityConfiguration": {
         "claimsAuthenticationManager": [],
         "claimsAuthorizationManager": []
      }
   },
   "syscache": [
      {
         "name": "security",
         "region": "security",
         "expiration": "60",
         "priority": "3"
      },
      {
         "name": "audit",
         "region": "audit",
         "expiration": "60",
         "priority": "3"
      }
   ],
   "hibernate-configuration": {
      "session-factory": {
         "property": [
            {
               "name": "dialect",
               "#text": "NHibernate.Dialect.MsSql2012Dialect"
            },
            {
               "name": "connection.provider",
               "#text": "NHibernate.Connection.DriverConnectionProvider"
            },
            {
               "name": "connection.driver_class",
               "#text": "NHibernate.Driver.SqlClientDriver"
            },
            {
               "name": "connection.connection_string_name",
               "#text": "Database"
            },
            {
               "name": "command_timeout",
               "#text": "180"
            },
            {
               "name": "show_sql",
               "#text": "false"
            },
            {
               "name": "generate_statistics",
               "#text": "false"
            },
            {
               "name": "cache.default_expiration",
               "#text": "20"
            },
            {
               "name": "cache.provider_class",
               "#text": "NHibernate.Caches.SysCache.SysCacheProvider, NHibernate.Caches.SysCache"
            },
            {
               "name": "cache.use_second_level_cache",
               "#text": "true"
            },
            {
               "name": "cache.use_query_cache",
               "#text": "true"
            },
            {
               "name": "adonet.batch_size",
               "#text": "200"
            },
            {
               "name": "prepare_sql",
               "#text": "true"
            }
         ],
         "mapping": {
            "assembly": "cfTests.Backend"
         },
         "event": [
            {
               "name": "delete",
               "listener": [
                  {
                     "name": "cfTests.Backend"
                  },
                  {
                     "name": "NHibernate"
                  }
               ]
            },
            {
               "name": "save-update",
               "listener": [
                  {
                     "name": "cfTests.Backend"
                  },
                  {
                     "name": "NHibernate"
                  }
               ]
            },
            {
               "name": "post-insert",
               "listener": [
                  {
                     "name": "cfTests.Backend"
                  },
                  {
                     "name": "NHibernate"
                  }
               ]
            },
            {
               "name": "post-update",
               "listener": [
                  {
                     "name": "cfTests.Backend"
                  },
                  {
                     "name": "NHibernate"
                  }
               ]
            },
            {
               "name": "post-delete",
               "listener": [
                  {
                     "name": "cfTests.Backend"
                  },
                  {
                     "name": "NHibernate"
                  }
               ]
            },
            {
               "name": "pre-collection-update",
               "listener": [
                  {
                     "name": "cfTests.Backend"
                  },
                  {
                     "name": "NHibernate"
                  }
               ]
            }
         ]
      }
   },
   "connectionStrings": {
      "clear": [],
      "add": {
         "connectionString": "Data Source=192.168.2.201;Initial Catalog=cfTests_4_gtheofilis;Integrated Security=False;User ID=g.theofilis@clmsuk.com;Password=f8743baeb8bc41939c3f6989d256f640c9953e790de84c839b0eb872e1a817ce1@",
         "name": "Database",
         "providerName": ""
      }
   },
   "appSettings": [
      {
         "name": "owin:AppStartup",
         "value": "cfTests.Web.Startup"
      },
      {
         "name": "FirstAdminSetup",
         "value": "false"
      },
      {
         "name": "EnableSSL",
         "value": "true"
      },
      {
         "name": "Locales",
         "value": "1033$English-United States|1032$Greek"
      },
      {
         "name": "DefaultLocale",
         "value": "1033"
      },
      {
         "name": "DefaultUILanguage",
         "value": "1033"
      },
      {
         "name": "DefaultTheme",
         "value": "Default"
      },
      {
         "name": "AdministratorEmail",
         "value": ""
      },
      {
         "name": "TestMode",
         "value": "false"
      },
      {
         "name": "TestModeEmail",
         "value": ""
      },
      {
         "name": "ServerExternalIP",
         "value": "localhost"
      },
      {
         "name": "audittrail:enabled",
         "value": "true"
      },
      {
         "name": "EmailSecureConnectionType",
         "value": "TLS"
      },
      {
         "name": "AuthenticationCookieName",
         "value": "cfTests_4_gtheofilis"
      },
      {
         "name": "databaseEncryption.certificateName",
         "value": "cfTests_4_gtheofilis"
      },
      {
         "name": "databaseEncryption.symmetricKeyName",
         "value": "cfTests_4_gtheofilis_Key"
      },
      {
         "name": "webpages:Version",
         "value": "3.0.0.0"
      },
      {
         "name": "ScheduleThreadEnabled",
         "value": "true"
      },
      {
         "name": "ScheduleThreadWorkIntervalInMsec",
         "value": "5000"
      },
      {
         "name": "ScheduleThreadAnalyticDebugOn",
         "value": "false"
      },
      {
         "name": "ScheduleThreadHttpRequestTimeOutMin",
         "value": "-1"
      },
      {
         "name": "rabbitmq:host",
         "value": ""
      },
      {
         "name": "rabbitmq:port",
         "value": ""
      },
      {
         "name": "rabbitmq:vhost",
         "value": ""
      },
      {
         "name": "rabbitmq:username",
         "value": ""
      },
      {
         "name": "rabbitmq:password",
         "value": ""
      },
      {
         "name": "rabbitmq:queue",
         "value": ""
      },
      {
         "name": "rabbitmq:exchange",
         "value": ""
      },
      {
         "name": "rabbitmq:routingKey",
         "value": ""
      },
      {
         "name": "apiregistry:consulhost",
         "value": ""
      },
      {
         "name": "ServerRole",
         "value": "Combined"
      },
      {
         "name": "IMAP:host",
         "value": ""
      },
      {
         "name": "IMAP:port",
         "value": "0"
      },
      {
         "name": "IMAP:enableSSL",
         "value": "false"
      },
      {
         "name": "IMAP:username",
         "value": ""
      },
      {
         "name": "IMAP:password",
         "value": ""
      },
      {
         "name": "SQLQueryTimeoutInSeconds",
         "value": "30"
      },
      {
         "name": "SeedSecurityTables",
         "value": "true"
      },
      {
         "name": "DisableAccessLog",
         "value": "false"
      },
      {
         "name": "ZipWebRequests",
         "value": "false"
      }
   ],
   "system.web": {
      "anonymousIdentification": {
         "enabled": "false",
         "cookieName": ".ANONAUTH_CFTESTS_4_GTHEOFILIS",
         "cookieTimeout": "4320",
         "cookiePath": "/",
         "cookieRequireSSL": "false",
         "cookieSlidingExpiration": "true",
         "cookieProtection": "All",
         "cookieless": "UseDeviceProfile"
      },
      "customErrors": {
         "mode": "Off"
      },
      "identity": {
         "impersonate": "false"
      },
      "httpRuntime": {
         "requestPathInvalidCharacters": "",
         "executionTimeout": "300",
         "maxRequestLength": "51200",
         "requestValidationMode": "2.0",
         "targetFramework": "4.6"
      },
      "sessionState": {
         "mode": "Custom",
         "customProvider": "SessionStateStoreProvider",
         "providers": {
            "add": {
               "name": "SessionStateStoreProvider",
               "cacheName": "SessionStateStorage"
            }
         }
      },
      "authorization": {
         "allow": {
            "users": "*"
         }
      },
      "authentication": {
         "mode": "None",
         "passport": {
            "redirectUrl": "internal"
         }
      },
      "globalization": {
         "uiCulture": "auto",
         "culture": "auto"
      },
      "compilation": {
         "debug": "true",
         "defaultLanguage": "c#",
         "targetFramework": "4.6.2",
         "assemblies": []
      },
      "httpHandlers": [],
      "httpModules": []
   },
   "system.webServer": {
      "httpErrors": {
         "remove": {
            "statusCode": "404",
            "subStatusCode": "-1"
         },
         "error": {
            "statusCode": "404",
            "prefixLanguageFilePath": "",
            "path": "/cfTests_4_gtheofilis/NotFoundPage/Render",
            "responseMode": "ExecuteURL"
         }
      },
      "validation": {
         "validateIntegratedModeConfiguration": "false"
      },
      "modules": {
         "runAllManagedModulesForAllRequests": "true",
         "remove": [
            {
               "name": "FormsAuthenticationModule"
            },
            {
               "name": "FormsAuthentication"
            },
            {
               "name": "SessionAuthenticationModule"
            }
         ],
         "add": [
            {
               "name": "SessionAuthenticationModule",
               "preCondition": "managedHandler"
            },
            {
               "name": "ClaimsAuthorizationModule",
               "preCondition": "managedHandler"
            }
         ]
      },
      "handlers": {
         "remove": [
            {
               "name": "UrlRoutingHandler"
            },
            {
               "name": "ExtensionlessUrlHandler-Integrated-4.0"
            },
            {
               "name": "OPTIONSVerbHandler"
            },
            {
               "name": "TRACEVerbHandler"
            }
         ],
         "add": [
            {
               "name": "ExtensionlessUrlHandler-Integrated-4.0",
               "path": "*.",
               "verb": "*",
               "preCondition": "integratedMode,runtimeVersionv4.0"
            },
            {
               "name": "aspNetCore",
               "path": "*",
               "verb": "*",
               "modules": "AspNetCoreModule",
               "resourceType": "Unspecified"
            }
         ]
      },
      "urlCompression": {
         "doStaticCompression": "true",
         "doDynamicCompression": "true"
      },
      "httpCompression": {
         "dynamicTypes": {
            "add": [
               {
                  "name": "1",
                  "mimeType": "application/json",
                  "enabled": "true"
               },
               {
                  "name": "2",
                  "mimeType": "application/json; charset=utf-8",
                  "enabled": "true"
               }
            ],
            "#text": "     \n      "
         },
         "#text": "   "
      },
      "staticContent": [
         {
            "name": "1",
            "fileExtension": "woff",
            "mimeType": "application/font-woff"
         },
         {
            "name": "2",
            "fileExtension": "woff2",
            "mimeType": "application/font-woff"
         }
      ],
      "aspNetCore": {
         "processPath": "%LAUNCHER_PATH%",
         "arguments": "%LAUNCHER_ARGS%",
         "stdoutLogEnabled": "false",
         "environmentVariables": []
      }
   },
   "system.net": {
      "mailSettings": {
         "smtp": {
            "from": "Test",
            "network": {
               "host": "localhost",
               "password": "dada",
               "port": "0",
               "userName": "dsadds"
            }
         }
      }
   },
   "system.diagnostics": {
      "sources": [
         {
            "propagateActivity": "true",
            "name": "System.ServiceModel",
            "switchValue": "Warning",
            "listeners": {
               "add": {
                  "name": "ServiceModelTraceListener",
                  "initializeData": "App_Data\\Logs\\Services.svclog"
               }
            }
         },
         {
            "name": "System.ServiceModel.MessageLogging",
            "switchValue": "Warning",
            "listeners": {
               "add": {
                  "name": "messages",
                  "initializeData": "App_Data\\Logs\\Messages.svclog"
               }
            }
         }
      ]
   },
   "system.serviceModel": {
      "diagnostics": {
         "messageLogging": {
            "logEntireMessage": "true",
            "logMalformedMessages": "true",
            "logMessagesAtServiceLevel": "true",
            "logMessagesAtTransportLevel": "false",
            "maxMessagesToLog": "3000",
            "maxSizeOfMessageToLog": "2000000"
         }
      },
      "behaviors": {
         "serviceBehaviors": {
            "behavior": {
               "name": "",
               "serviceMetadata": {
                  "httpGetEnabled": "true"
               },
               "serviceDebug": {
                  "includeExceptionDetailInFaults": "false"
               }
            }
         }
      },
      "serviceHostingEnvironment": {
         "multipleSiteBindingsEnabled": "false",
         "aspNetCompatibilityEnabled": "True"
      },
      "bindings": {
         "basicHttpBinding": {
            "binding": {
               "name": "AirthmaticSoap",
               "closeTimeout": "00:03:00",
               "openTimeout": "00:03:00",
               "receiveTimeout": "00:10:00",
               "sendTimeout": "00:03:00",
               "bypassProxyOnLocal": "false",
               "hostNameComparisonMode": "StrongWildcard",
               "maxBufferPoolSize": "2147483647",
               "maxReceivedMessageSize": "2147483647",
               "messageEncoding": "Text",
               "textEncoding": "utf-8",
               "useDefaultWebProxy": "true",
               "allowCookies": "false",
               "readerQuotas": {
                  "maxDepth": "2147483647",
                  "maxStringContentLength": "2147483647",
                  "maxArrayLength": "2147483647",
                  "maxBytesPerRead": "2147483647",
                  "maxNameTableCharCount": "2147483647"
               },
               "security": {
                  "mode": "None",
                  "transport": {
                     "clientCredentialType": "None",
                     "proxyCredentialType": "None",
                     "realm": ""
                  },
                  "message": {
                     "clientCredentialType": "UserName",
                     "algorithmSuite": "Default"
                  }
               }
            }
         },
         "customBinding": {
            "binding": {
               "name": "AirthmaticSoap12",
               "closeTimeout": "00:03:00",
               "openTimeout": "00:03:00",
               "receiveTimeout": "00:10:00",
               "sendTimeout": "00:03:00",
               "bypassProxyOnLocal": "false",
               "hostNameComparisonMode": "StrongWildcard",
               "maxBufferPoolSize": "2147483647",
               "maxReceivedMessageSize": "2147483647",
               "messageEncoding": "Text",
               "textEncoding": "utf-8",
               "useDefaultWebProxy": "true",
               "allowCookies": "false"
            }
         }
      },
      "client": [
         {
            "address": "http://localhost:51721/Airthmatic.asmx",
            "binding": "basicHttpBinding",
            "bindingConfiguration": "AirthmaticSoap",
            "contract": "AirthmaticSoap",
            "name": "AirthmaticSoap"
         },
         {
            "address": "http://localhost:51721/Airthmatic.asmx",
            "binding": "customBinding",
            "bindingConfiguration": "AirthmaticSoap12",
            "contract": "AirthmaticSoap",
            "name": "AirthmaticSoap12"
         }
      ]
   }
}

