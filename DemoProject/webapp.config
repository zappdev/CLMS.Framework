<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="ajaxNet">
      <section name="ajaxSettings" type="AjaxPro.AjaxSettingsSectionHandler,AjaxPro.2" requirePermission="false" restartOnExternalChanges="true" />
    </sectionGroup>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler, NHibernate" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <section name="syscache" type="NHibernate.Caches.SysCache.SysCacheSectionHandler,NHibernate.Caches.SysCache" />
    <section name="cacheManager" type="CacheManager.Core.Configuration.CacheManagerSection, CacheManager.Core" />
    <section name="cacheManager.Redis" type="CacheManager.Redis.RedisConfigurationSection, CacheManager.StackExchange.Redis" />
    <section name="throttlePolicy" type="WebApiThrottle.ThrottlePolicyConfiguration, WebApiThrottle" />
  </configSections>
  <cacheManager.Redis>
    <connections>
      <connection id="redis1" database="0" connectionString=":0, allowAdmin = False, ssl = false" />
    </connections>
  </cacheManager.Redis>
  <cacheManager>
    <managers>
      <!--       <cache name="ServicesCache" enableStatistics="true" enablePerformanceCounters="true" backplaneName="redis1" backplaneType="CacheManager.Redis.RedisCacheBackplane, CacheManager.StackExchange.Redis" serializerType="CacheManager.Serialization.Json.JsonCacheSerializer, CacheManager.Serialization.Json"> -->
      <cache name="ServicesCache" enableStatistics="true" enablePerformanceCounters="true" serializerType="CacheManager.Serialization.Json.JsonCacheSerializer, CacheManager.Serialization.Json">
        <handle name="default" ref="dicGeneric" />
        <!--<handle name="redis1" ref="redisHandle" expirationMode="None" isBackplaneSource="true"/>-->
      </cache>
      <cache name="AppCache" enableStatistics="true" enablePerformanceCounters="true" serializerType="CacheManager.Serialization.Json.JsonCacheSerializer, CacheManager.Serialization.Json">
        <handle name="default" ref="dicGeneric" />
      </cache>
      <cache name="SessionStateStorage" enableStatistics="true" enablePerformanceCounters="true" serializerType="CacheManager.Serialization.Json.JsonCacheSerializer, CacheManager.Serialization.Json">
        <handle name="default" ref="dicSession" />
      </cache>
    </managers>
    <cacheHandles>
      <handleDef name="dicGeneric" id="dicGeneric" type="CacheManager.Core.Internal.DictionaryCacheHandle`1, CacheManager.Core" defaultExpirationMode="Absolute" defaultTimeout="15s" />
      <handleDef name="dicSession" id="dicSession" type="CacheManager.Core.Internal.DictionaryCacheHandle`1, CacheManager.Core" defaultExpirationMode="Absolute" defaultTimeout="20m" />
    </cacheHandles>
  </cacheManager>
  <throttlePolicy limitPerSecond="10000" ipThrottling="false" clientThrottling="false" endpointThrottling="true">
    <rules>
      <!--Ip rules-->
      <!--<add policyType="1" entry="::1/10"
           limitPerSecond="2"
           limitPerMinute="15"/>
      <add policyType="1" entry="192.168.2.1"
           limitPerMinute="12" />-->
      <!--Client rules-->
      <!--<add policyType="2" entry="api-client-key-1"
           limitPerHour="60" />-->
      <!--Endpoint rules-->
      <add limitPerSecond="1000" policyType="3" entry="api/Runner" name="api/Runner" />
      <add limitPerSecond="1000" policyType="3" entry="api/Test" name="api/Test"/>
      <add limitPerSecond="1000" policyType="3" entry="api/CacheSessionService" name="api/CacheSessionService" />
      <add limitPerSecond="1000" policyType="3" entry="api/ExposeToConsume" name="api/ExposeToConsume"/>
    </rules>
    <whitelists>
      <!--Ip whitelist-->
      <add policyType="1" entry="127.0.0.1" name="1"/>
      <add policyType="1" entry="192.168.0.0/24" name="2"/>
      <!--Client whitelist-->
      <add policyType="2" entry="api-admin-key" name="3"/>
    </whitelists>
  </throttlePolicy>
  <system.identityModel.services>
    <federationConfiguration>
      <cookieHandler mode="Default" name="cfTests_4_gtheofilis_Fed" requireSsl="false" />
    </federationConfiguration>
  </system.identityModel.services>
  <system.identityModel>
    <identityConfiguration>
      <claimsAuthenticationManager type="cfTests.Identity.ClaimsTransformationModule, cfTests.Backend" />
      <claimsAuthorizationManager type="cfTests.Identity.AuthorizationManager, cfTests.Backend" />
    </identityConfiguration>
  </system.identityModel>
  <syscache>
    <cache name="security" region="security" expiration="60" priority="3" />
    <cache name="audit" region="audit" expiration="60" priority="3" />
  </syscache>
  <hibernate-configuration>
    <session-factory>
      <!--the brand of dbms-->
      <property name="dialect">NHibernate.Dialect.MsSql2012Dialect</property>
      <!--connection provider-->
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <!--sql client driver-->
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
      <!--connection string-->
      <property name="connection.connection_string_name">Database</property>
      <!--SQL command timeout in seconds-->
      <property name="command_timeout">180</property>
      <!--output generated sql to console window-->
      <property name="show_sql">false</property>
      <property name="generate_statistics">false</property>
      <property name="cache.default_expiration">20</property>
      <property name="cache.provider_class">NHibernate.Caches.SysCache.SysCacheProvider, NHibernate.Caches.SysCache</property>
      <property name="cache.use_second_level_cache">true</property>
      <property name="cache.use_query_cache">true</property>
      <property name="adonet.batch_size">200</property>
      <property name="prepare_sql">true</property>
      <mapping assembly="cfTests.Backend" />
      <event type="delete" name="delete">
        <listener name="cfTests.Backend" class="cfTests.DAL.OnDeleteListener, cfTests.Backend" />
        <listener name="NHibernate" class="NHibernate.Event.Default.DefaultDeleteEventListener, NHibernate" />
      </event>
      <event type="save-update" name="save-update">
        <listener name="cfTests.Backend" class="cfTests.DAL.OnSaveOrUpdateListener, cfTests.Backend" />
        <listener name="NHibernate" class="NHibernate.Event.Default.DefaultSaveOrUpdateEventListener, NHibernate" />
      </event>
      <event type="post-insert" name="post-insert">
        <listener name="cfTests.Backend" class="cfTests.DAL.NHAuditTrailListener, cfTests.Backend" />
        <listener name="NHibernate" class="cfTests.Identity.NHAuthorizationListener, cfTests.Backend" />
      </event>
      <event type="post-update" name="post-update">
        <listener name="cfTests.Backend" class="cfTests.DAL.NHAuditTrailListener, cfTests.Backend" />
        <listener name="NHibernate" class="cfTests.Identity.NHAuthorizationListener, cfTests.Backend" />
      </event>
      <event type="post-delete" name="post-delete">
        <listener name="cfTests.Backend" class="cfTests.DAL.NHAuditTrailListener, cfTests.Backend" />
        <listener name="NHibernate" class="cfTests.Identity.NHAuthorizationListener, cfTests.Backend" />
      </event>
      <event type="pre-collection-update" name="pre-collection-update">
        <listener name="cfTests.Backend" class="cfTests.DAL.NHAuditTrailListener, cfTests.Backend" />
        <listener name="NHibernate" class="cfTests.Identity.NHAuthorizationListener, cfTests.Backend" />
      </event>
    </session-factory>
  </hibernate-configuration>
  <connectionStrings>
    <clear />
    <add connectionString="Data Source=192.168.2.201;Initial Catalog=cfTests_4_gtheofilis;Integrated Security=False;User ID=g.theofilis@clmsuk.com;Password=f8743baeb8bc41939c3f6989d256f640c9953e790de84c839b0eb872e1a817ce1@" name="Database" providerName="" />
  </connectionStrings>
  <!-- App Settings -->
  <appSettings>
    <add name="owin:AppStartup" value="cfTests.Web.Startup" />
    <add name="FirstAdminSetup" value="false" />
    <add name="EnableSSL" value="true" />
    <add name="Locales" value="1033$English-United States|1032$Greek" />
    <add name="DefaultLocale" value="1033" />
    <add name="DefaultUILanguage" value="1033" />
    <add name="DefaultTheme" value="Default" />
    <add name="AdministratorEmail" value="" />
    <add name="TestMode" value="false" />
    <add name="TestModeEmail" value="" />
    <add name="ServerExternalIP" value="localhost" />
    <add name="audittrail:enabled" value="true" />
    <add name="EmailSecureConnectionType" value="TLS" />
    <add name="AuthenticationCookieName" value="cfTests_4_gtheofilis" />
    <add name="databaseEncryption.certificateName" value="cfTests_4_gtheofilis" />
    <add name="databaseEncryption.symmetricKeyName" value="cfTests_4_gtheofilis_Key" />
    <add name="webpages:Version" value="3.0.0.0" />
    <add name="ScheduleThreadEnabled" value="true" />
    <add name="ScheduleThreadWorkIntervalInMsec" value="5000" />
    <add name="ScheduleThreadAnalyticDebugOn" value="false" />
    <add name="ScheduleThreadHttpRequestTimeOutMin" value="-1" />
    <add name="rabbitmq:host" value="" />
    <add name="rabbitmq:port" value="" />
    <add name="rabbitmq:vhost" value="" />
    <add name="rabbitmq:username" value="" />
    <add name="rabbitmq:password" value="" />
    <add name="rabbitmq:queue" value="" />
    <add name="rabbitmq:exchange" value="" />
    <add name="rabbitmq:routingKey" value="" />
    <add name="apiregistry:consulhost" value="" />
    <add name="ServerRole" value="Combined" />
    <add name="IMAP:host" value="" />
    <add name="IMAP:port" value="0" />
    <add name="IMAP:enableSSL" value="false" />
    <add name="IMAP:username" value="" />
    <add name="IMAP:password" value="" />
    <add name="SQLQueryTimeoutInSeconds" value="30" />
    <add name="SeedSecurityTables" value="true" />
    <add name="DisableAccessLog" value="false" />
    <add name="ZipWebRequests" value="false" />
  </appSettings>
  <system.web>
    <anonymousIdentification enabled="false" cookieName=".ANONAUTH_CFTESTS_4_GTHEOFILIS" cookieTimeout="4320" cookiePath="/" cookieRequireSSL="false" cookieSlidingExpiration="true" cookieProtection="All" cookieless="UseDeviceProfile" />
    <customErrors mode="Off" />
    <identity impersonate="false" />
    <httpRuntime requestPathInvalidCharacters="" executionTimeout="300" maxRequestLength="51200" requestValidationMode="2.0" targetFramework="4.6" />
    <sessionState mode="Custom" customProvider="SessionStateStoreProvider">
      <providers>
        <add name="SessionStateStoreProvider" type="CLMS.Framework.Utilities.SessionStateStoreProvider" cacheName="SessionStateStorage" />
      </providers>
    </sessionState>
    <!--Authorization-->
    <authorization>
      <allow users="*" />
    </authorization>
    <!--Authentication-->
    <authentication mode="None">
      <passport redirectUrl="internal" />
    </authentication>
    <globalization uiCulture="auto" culture="auto" />
    <compilation debug="true" defaultLanguage="c#" targetFramework="4.6.2">
      <assemblies></assemblies>
    </compilation>
    <httpHandlers></httpHandlers>
    <httpModules></httpModules>
  </system.web>
  <system.webServer>
    <httpErrors>
      <remove statusCode="404" subStatusCode="-1" />
      <error statusCode="404" prefixLanguageFilePath="" path="/cfTests_4_gtheofilis/NotFoundPage/Render" responseMode="ExecuteURL" />
    </httpErrors>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="FormsAuthenticationModule" />
      <remove name="FormsAuthentication" />
      <remove name="SessionAuthenticationModule" />
      <add name="SessionAuthenticationModule" type="System.IdentityModel.Services.SessionAuthenticationModule,  System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral,  PublicKeyToken=b77a5c561934e089" preCondition="managedHandler" />
      <add name="ClaimsAuthorizationModule" type="System.IdentityModel.Services.ClaimsAuthorizationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" preCondition="managedHandler" />
    </modules>
    <handlers>
      <remove name="UrlRoutingHandler" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModule" resourceType="Unspecified" />
    </handlers>
    <urlCompression doStaticCompression="true" doDynamicCompression="true" />
    <httpCompression>
      <dynamicTypes>
        <add name="1" mimeType="application/json" enabled="true" />
        <add name="2" mimeType="application/json; charset=utf-8" enabled="true" />      
      </dynamicTypes>   
    </httpCompression>
    <staticContent>
      <mimeMap name="1" fileExtension="woff" mimeType="application/font-woff" />
      <mimeMap name="2" fileExtension="woff2" mimeType="application/font-woff" />
    </staticContent>
    <aspNetCore processPath="%LAUNCHER_PATH%" arguments="%LAUNCHER_ARGS%" stdoutLogEnabled="false">
      <environmentVariables />
    </aspNetCore>
  </system.webServer>
  <system.net>
    <mailSettings>
      <smtp from="adasd">
        <network host="dasda" password="dasda" port="0" userName="dasd" />
      </smtp>
    </mailSettings>
  </system.net>
  <system.diagnostics>
    <sources>
      <source propagateActivity="true" name="System.ServiceModel" switchValue="Warning">
        <listeners>
          <add name="ServiceModelTraceListener" type="System.Diagnostics.XmlWriterTraceListener" initializeData="App_Data\Logs\Services.svclog" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning">
        <listeners>
          <add name="messages" type="System.Diagnostics.XmlWriterTraceListener" initializeData="App_Data\Logs\Messages.svclog" />
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
  <system.serviceModel>
    <diagnostics>
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="false" maxMessagesToLog="3000" maxSizeOfMessageToLog="2000000" />
    </diagnostics>
    <behaviors>
      <serviceBehaviors>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="false" aspNetCompatibilityEnabled="True" />
    <bindings>
      <basicHttpBinding>
        <binding name="AirthmaticSoap" closeTimeout="00:03:00" openTimeout="00:03:00" receiveTimeout="00:10:00" sendTimeout="00:03:00" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647" />
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm="" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </basicHttpBinding>
      <customBinding>
        <binding name="AirthmaticSoap12" closeTimeout="00:03:00" openTimeout="00:03:00" receiveTimeout="00:10:00" sendTimeout="00:03:00" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false" />
      </customBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost:51721/Airthmatic.asmx" binding="basicHttpBinding" bindingConfiguration="AirthmaticSoap" contract="AirthmaticSoap" name="AirthmaticSoap" />
      <endpoint address="http://localhost:51721/Airthmatic.asmx" binding="customBinding" bindingConfiguration="AirthmaticSoap12" contract="AirthmaticSoap" name="AirthmaticSoap12" />
    </client>
  </system.serviceModel>
</configuration>